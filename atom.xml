<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Southern Fish</title>
  
  
  <link href="https://southernfish.github.io/atom.xml" rel="self"/>
  
  <link href="https://southernfish.github.io/"/>
  <updated>2025-06-18T10:11:04.109Z</updated>
  <id>https://southernfish.github.io/</id>
  
  <author>
    <name>Southern Fish</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo个人博客搭建</title>
    <link href="https://southernfish.github.io/2025/06/18/hexo-blog-build/"/>
    <id>https://southernfish.github.io/2025/06/18/hexo-blog-build/</id>
    <published>2025-06-18T06:47:36.000Z</published>
    <updated>2025-06-18T10:11:04.109Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo 是一个简单、轻量、基于Node的静态博客<a href="https://so.csdn.net/so/search?q=%E6%A1%86%E6%9E%B6&spm=1001.2101.3001.7020">框架</a>，可以方便的生成静态网页托管于GitHub和Heroku。本文以 Hexo + GitHub Pages + Typora + PicGo 为例。</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p><strong>1、<a href="https://nodejs.org/en/download/">下载node</a>并安装。</strong>安装好node，会默认一起安装好 npm 包管理器，可通过（Ctrl+R）打开 cmd 终端，使用以下命令查看安装版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v </span><br><span class="line">npm -version</span><br></pre></td></tr></table></figure><p><strong>2、安装 git，配置个人信息。</strong>官网下载，选择自己操作系统的版本，根据提示一直 next 就装好了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;用户名&quot;</span><br><span class="line">git config --global user.email &quot;xxxxxx@qq.com&quot;</span><br></pre></td></tr></table></figure><p><strong>生成密钥。</strong>一般是在 <strong>~/.ssh</strong> 路径下，其中 id_rsa 存储私钥（<strong>不要共享私钥</strong>），id_rsa.pub 存储公钥。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;xxxxxx@qq.com&quot;</span><br></pre></td></tr></table></figure><p>GitHub公钥配置步骤：登录 GitHub → Settings → SSH and GPG keys → New SSH key → 填写相关信息(如下) →  Add SSH key<br>填写信息如下：</p><p><strong>Title：</strong>标识密钥用途Key；</p><p><strong>type：</strong>保持默认 Authentication Key；</p><p><strong>Key：</strong>公钥内容</p><p><strong>3、测试 SSH 连接，</strong>出现如下则配置成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line">Hi username! You&#x27;ve successfully authenticated...</span><br></pre></td></tr></table></figure><p>配置完 SSH 后，之后使用远程仓库的方式更新为 SSH 。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote set-url origin git@github.com:username/repo.git</span><br><span class="line">git remote -v</span><br><span class="line"># 显示 ssh 地址（git@github.com:...）则生效</span><br></pre></td></tr></table></figure><p>克隆新仓库地址也使用 SSH。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 克隆新仓库</span><br><span class="line">git clone git@github.com:username/repo.git</span><br></pre></td></tr></table></figure><p><strong>4、安装 hexo 及相关依赖 。</strong>在 git 终端执行安装 hexo 相关命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install hexo --save</span><br><span class="line">npm install hexo-deployer-git --save # 用于部署发布</span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h1 id="Hexo项目构建"><a href="#Hexo项目构建" class="headerlink" title="Hexo项目构建"></a>Hexo项目构建</h1><p><strong>1、开始搭建Hexo项目。</strong>自定义一个文件夹（我的路径是：<code>E://WorkSpace/fishblog</code>），在命令行窗口进入目录，或直接从本机进入文件夹，右键打开 Git Bash Here，执行如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br><span class="line">hexo g </span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p><code>hexo g </code>是 <code>hexo generate</code> 的简便写法；<code>hexo s</code> 是 <code>hexo server</code> 的简便写法。<code>hexo s</code>启动本地服务器，在浏览器打开localhost:4000即可看到效果。关闭本地服务：Ctrl + C 。部署的命令也可以并列的写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s -- 本地</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d -- 远程部署（发布到github）</span><br></pre></td></tr></table></figure><p><strong>2、新建博客文件。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post &quot;article title&quot;</span><br></pre></td></tr></table></figure><p>项目中 <code>/source/_posts </code>将会看到<code> article title.md</code> 文件。编辑之后运行生成、部署命令便可发布。我使用 Typora 编辑，后续会讲到 Typora 相关配置。之后也可以直接在该路径下新建md文件，上传到 GitHub，后续会讲到如何自动化部署发布。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g   # 生成</span><br><span class="line">hexo d   # 部署</span><br><span class="line">hexo d -g # 在部署前先生成</span><br></pre></td></tr></table></figure><p><strong>3、个性化设置。</strong>主题替换、卡通人物、数字统计等。渲染md文件还需执行如下命令安装依赖。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-renderer-markdown-it --save # 需要安装这个渲染插件</span><br></pre></td></tr></table></figure><p>卡通人物。选自己喜欢的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br><span class="line">npm install live2d-widget-model-haruto</span><br></pre></td></tr></table></figure><p>主题替换。挑一个喜欢 blog theme，此处以 <code>butterfly</code> 为例，点进去（多数是贡献者的博客网站）找到当前主题的 GitHub 仓库入口（通常情况在博客的正下方），进入 GitHub 克隆当前仓库，放在 Hexo 所在目录的 themes 文件夹下（原目录下有一个默认的 landscape 主题，新主题目录和它同级）。修改 Hexo 根目录下的 <code>_config.yml</code> 文件，找到 theme 配置项，修改为克隆的主题名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/jerryc127/hexo-theme-butterfly.git</span><br></pre></td></tr></table></figure><p>统计数字、数学公式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save # 统计数字</span><br><span class="line">npm install @neilsustc/markdown-it-katex --save # 渲染数学公式</span><br></pre></td></tr></table></figure><p><strong>4、新建分类、目录、标签 。</strong>修改对应的 md 文件便可自定义属于自己的分类、标签。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about      # 根目录/source/about/index.md</span><br><span class="line">hexo new page categories # 根目录/source/categories/index.md</span><br><span class="line">hexo new page tags       # 根目录/source/tags/index.md</span><br></pre></td></tr></table></figure><p>编辑md文件时，注意多个分类写法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">分级c2是c1的子类</span><br><span class="line">categories:</span><br><span class="line">- c1</span><br><span class="line">- c2</span><br><span class="line">同级多类</span><br><span class="line">categories:</span><br><span class="line">- [c1]</span><br><span class="line">- [c2]</span><br></pre></td></tr></table></figure><p>相应的配置 <code>_config.yml</code> 文件设置。其他更多配置可参考<a href="https://segmentfault.com/a/1190000042212798?utm_source=sf-similar-article">文章</a>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># 右下角的卡通人物</span><br><span class="line">## https://github.com/xiazeyu/live2d-widget-models/tree/master/packages</span><br><span class="line">lived2:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptForm: local</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-haruto # model name select</span><br><span class="line">  display: # model position size</span><br><span class="line">    position: left</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: false</span><br><span class="line"></span><br><span class="line"># 主题配置，更换主题需要将主题放在landscape同级文件夹下，名字就是文件夹名   </span><br><span class="line">theme: butterfly </span><br><span class="line"></span><br><span class="line"># 数学 katex</span><br><span class="line">markdown:</span><br><span class="line">  plugins:</span><br><span class="line">    - plugin:</span><br><span class="line">      name: &#x27;@neilsustc/markdown-it-katex&#x27;</span><br><span class="line">      options:</span><br><span class="line">        strict: false</span><br></pre></td></tr></table></figure><h1 id="将Hexo与GitHub-Page-关联起来"><a href="#将Hexo与GitHub-Page-关联起来" class="headerlink" title="将Hexo与GitHub Page 关联起来"></a>将Hexo与GitHub Page 关联起来</h1><p>此处使用私有库 fishBlog 存储 hexo 项目，也就是你自己新建的项目，公共库 <code>username.github.io</code> 存储编译后的静态文件以便访问。<br><strong>1、上传 hexo 项目，并完成相关配置。</strong>上传之前，需要更新一下 <code>.gitignore</code> 文件。默认情况下 <code>public/</code> 不会被上传(也不该被上传)，确保 <code>.gitignore</code> 文件中包含一行 <code>public/</code>。</p><p>上传完成之后，将该项目设置为<strong>私有</strong>，配置 Repository secrets 。进入该项目 →  Settings → Secrets and variables → Actions → New repository secret 。新建<code> HEXO_DEPLOY_PRI</code>（配置deploy.yml会用到）,  <code>GIT_PASSWORD</code></p><p><strong>2、创建一个公共库 <code>username.github.io</code>。</strong>设置为 public 并初始化，用同样的方法新建<code> HEXO_DEPLOY_PRI</code>。</p><p>开启 pages 功能：进入该公共库 →  Settings → 左侧Pages → Build and deployment → 选择 <code>main</code> 分支， <code>/root</code>  →  save</p><p>站点配置文件_config.yml 中配置 url 和 deploy 配置项。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">url: https://southernfish.github.io/</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:username/username.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p><strong>3、创建GitHub Actions工作流。</strong>在你的私有库中，创建一个新的目录<code>.github/workflows/</code>，并在其中创建<code>deploy.yml</code>文件。该文件将包含自动部署的配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"># Action的名字</span><br><span class="line">name: Deploy Hexo Action Name</span><br><span class="line">on:</span><br><span class="line">  push:</span><br><span class="line">    branches:</span><br><span class="line">      - main</span><br><span class="line"></span><br><span class="line">#这里放环境变量,需要替换成自己的</span><br><span class="line">env:</span><br><span class="line">  # Hexo编译后使用此 git用户部署到github仓库</span><br><span class="line">  GIT_USER: username</span><br><span class="line">  # Hexo 编译后使用此 git邮箱部署到github仓库</span><br><span class="line">  GIT_EMAIL: xxxxxx@qq.com</span><br><span class="line">  # Hexo编译后要部署的github仓库</span><br><span class="line">  GIT_DEPLOY_REPO: username/username.github.io</span><br><span class="line">  # Hexo编译后要部署到的分支</span><br><span class="line">  GIT_DEPLOY_BRANCH: main</span><br><span class="line"># 工作流</span><br><span class="line">jobs:</span><br><span class="line">  build:</span><br><span class="line">    name: Build on node</span><br><span class="line">    runs-on: ubuntu-latest # 使用 Ubuntu 最新版</span><br><span class="line">    if: github.event.repository.owner.id == github.event.sender.id</span><br><span class="line">    strategy:</span><br><span class="line">      matrix:</span><br><span class="line">        os: [ubuntu-latest]</span><br><span class="line">        node_version: [12.x] # 使用 Node.js 12.x 版本</span><br><span class="line"></span><br><span class="line">    steps:</span><br><span class="line">      - name: Checkout code</span><br><span class="line">        uses: actions/checkout@v2 # 检出代码到 runner</span><br><span class="line"></span><br><span class="line">      - name: Checkout deploy repo</span><br><span class="line">        uses: actions/checkout@v2</span><br><span class="line">        with:</span><br><span class="line">          repository: $&#123;&#123; env.GIT_DEPLOY_REPO &#125;&#125;</span><br><span class="line">          ref: $&#123;&#123; env.GIT_DEPLOY_BRANCH &#125;&#125;</span><br><span class="line">          path: .deploy_git</span><br><span class="line"></span><br><span class="line">      - name: Use Node.js $&#123;&#123; matrix.node_version &#125;&#125; # 设置 Node.js 环境</span><br><span class="line">        uses: actions/setup-node@v1</span><br><span class="line">        with:</span><br><span class="line">          node-version: $&#123;&#123; matrix.node_version &#125;&#125; # 使用 Node.js 的版本，根据需要调整</span><br><span class="line"></span><br><span class="line">      - name: Configuration environment # 设置密钥、设置Git信息</span><br><span class="line">        env:</span><br><span class="line">          HEXO_DEPLOY_PRI: $&#123;&#123;secrets.HEXO_DEPLOY_PRI&#125;&#125;</span><br><span class="line">        run: |</span><br><span class="line">          sudo timedatectl set-timezone &quot;Asia/Shanghai&quot;</span><br><span class="line">          mkdir -p ~/.ssh/</span><br><span class="line">          echo &quot;$HEXO_DEPLOY_PRI&quot; &gt; ~/.ssh/id_rsa</span><br><span class="line">          chmod 600 ~/.ssh/id_rsa</span><br><span class="line">          ssh-keyscan -t rsa github.com &gt;&gt; ~/.ssh/known_hosts</span><br><span class="line">          sudo timedatectl set-timezone &quot;Asia/Shanghai&quot;</span><br><span class="line">          git config --global user.name $GIT_USER</span><br><span class="line">          git config --global user.email $GIT_EMAIL</span><br><span class="line"></span><br><span class="line">      - name: Install dependencies # 安装hexo和其他依赖</span><br><span class="line">        run: |</span><br><span class="line">          npm install hexo-cli -g</span><br><span class="line">          npm install --save</span><br><span class="line"></span><br><span class="line">      - name: Deploy hexo # 包含了clean、generate、deploy</span><br><span class="line">        run: |</span><br><span class="line">          npm run deploy</span><br></pre></td></tr></table></figure><p><strong>4、参考链接</strong></p><ul><li><a href="https://docs.github.com/zh/pages">GitHub Pages</a></li><li><a href="https://docs.github.com/zh/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site#publishing-with-a-custom-github-actions-workflow">使用自定义 GitHub Actions 工作流进行发布</a></li><li><a href="https://github.com/marketplace/actions/deploy-github-pages-site">actions/deploy-github-pages-site</a></li></ul><h1 id="PicGo安装"><a href="#PicGo安装" class="headerlink" title="PicGo安装"></a>PicGo安装</h1><p>1、下载安装。直接根据提示安装，路径可自己指定。</p><p>2、PicGo<code>预置的有四种链接格式：</code>Markdown<code>、</code>HTML<code>、</code>URL<code>、</code>UBB`，其得到的上传文件链接分别为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Makdown: ![](https://i.loli.net/2021/09/14/KB3LimF5SGtI6vf.png)</span><br><span class="line">HTML: &lt;img src=&quot;https://i.loli.net/2021/09/14/KB3LimF5SGtI6vf.png&quot;/&gt;</span><br><span class="line">URL: https://i.loli.net/2021/09/14/KB3LimF5SGtI6vf.png</span><br><span class="line">UBB: [IMG]https://i.loli.net/2021/09/14/KB3LimF5SGtI6vf.png[/IMG]</span><br></pre></td></tr></table></figure><p>3、自定义链接格式<code>Custom</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Custom:  &lt;center&gt;&lt;img src=&quot;$url&quot; alt=&quot;$fileName&quot;/&gt;&lt;/center&gt;</span><br></pre></td></tr></table></figure><p>4、PicGo设置中可以配置如日志、代理等设置，一定要注意要打开该自动复制URL的设置<strong>上传后自动复制URL：开</strong></p><p>5、图床设置，此处使用GitHub图床。首先需要在 GitHub 中初始化一个 公共库 ImageHostServer。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">设定仓库名: username/ImageHostServer</span><br><span class="line">设定分支名: main</span><br><span class="line">设定Token: xxxxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line">指定存储路径: /hexo</span><br><span class="line">设定自定义域名：此处我没用到，便不做设置</span><br></pre></td></tr></table></figure><p>Token 设置方式：Settings → Developer Settings → personal access tokens → Fine-grained → Generate new token → 设置名字为ImageHostServerToken → 找到Repository access → 选择 Only select repositories，并选择库 ImageHostServer → 找到 Repository permissions 的 contens  → 点击右侧下拉按钮设置为 Read and write → Generate token → 复制Token值并保存下来，picGo配置需要</p><h1 id="Typora-安装"><a href="#Typora-安装" class="headerlink" title="Typora 安装"></a>Typora 安装</h1><p>1、安装可参考<a href="https://www.cnblogs.com/fengyanqiblog/p/18928611">Typora安装及破解</a></p><p>2、配置。打开 Typora 的偏好设置，选择图像，把插入图片设置为上传图片；上传服务设置为 PicGo(app) ，PicGo路径设置为PicGo的安装路径（D:\HexoBlog\Typora\Typora.exe），配置完成之后，点击验证上传，提示成功上传图片并获得新的URL则说明成功了。如若不成功检测一下 PicGo设置的server设置端口是否一致，不一致的话需要改成一致。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hexo 是一个简单、轻量、基于Node的静态博客&lt;a href=&quot;https://so.csdn.net/so/search?q=%E6%A1%86%E6%9E%B6&amp;spm=1001.2101.3001.7020&quot;&gt;框架&lt;/a&gt;，可以方便的生成静态网页托管于GitHub</summary>
      
    
    
    
    <category term="hexo" scheme="https://southernfish.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://southernfish.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Test-4</title>
    <link href="https://southernfish.github.io/2022/08/13/Test-4/"/>
    <id>https://southernfish.github.io/2022/08/13/Test-4/</id>
    <published>2022-08-13T12:43:11.000Z</published>
    <updated>2025-06-18T10:11:04.109Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).</summary>
    
    
    
    <category term="分类3" scheme="https://southernfish.github.io/categories/%E5%88%86%E7%B1%BB3/"/>
    
    
    <category term="tag1" scheme="https://southernfish.github.io/tags/tag1/"/>
    
  </entry>
  
  <entry>
    <title>Test-3</title>
    <link href="https://southernfish.github.io/2022/08/13/Test-3/"/>
    <id>https://southernfish.github.io/2022/08/13/Test-3/</id>
    <published>2022-08-13T08:45:31.000Z</published>
    <updated>2022-08-13T09:09:10.281Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start-4">Quick Start</h2><h3 id="Create-a-new-post-4">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server-2">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files-2">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites-2">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).</summary>
    
    
    
    <category term="分类3" scheme="https://southernfish.github.io/categories/%E5%88%86%E7%B1%BB3/"/>
    
    <category term="分类3-1" scheme="https://southernfish.github.io/categories/%E5%88%86%E7%B1%BB3/%E5%88%86%E7%B1%BB3-1/"/>
    
    
    <category term="tag1" scheme="https://southernfish.github.io/tags/tag1/"/>
    
    <category term="tag2" scheme="https://southernfish.github.io/tags/tag2/"/>
    
  </entry>
  
  <entry>
    <title>Test-2</title>
    <link href="https://southernfish.github.io/2022/08/11/Test-2/"/>
    <id>https://southernfish.github.io/2022/08/11/Test-2/</id>
    <published>2022-08-11T01:51:21.000Z</published>
    <updated>2022-08-11T02:39:00.628Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start-3">Quick Start</h2><h3 id="Create-a-new-post-3">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">这是摘要哦。。。。</summary>
    
    
    
    <category term="分类1" scheme="https://southernfish.github.io/categories/%E5%88%86%E7%B1%BB1/"/>
    
    <category term="分类2" scheme="https://southernfish.github.io/categories/%E5%88%86%E7%B1%BB2/"/>
    
    
    <category term="tag3" scheme="https://southernfish.github.io/tags/tag3/"/>
    
    <category term="tag4" scheme="https://southernfish.github.io/tags/tag4/"/>
    
  </entry>
  
  <entry>
    <title>Test-1</title>
    <link href="https://southernfish.github.io/2022/08/11/Test-1/"/>
    <id>https://southernfish.github.io/2022/08/11/Test-1/</id>
    <published>2022-08-11T01:45:15.000Z</published>
    <updated>2025-06-18T10:11:04.109Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">这是摘要。。。。。。</summary>
    
    
    
    <category term="分类3" scheme="https://southernfish.github.io/categories/%E5%88%86%E7%B1%BB3/"/>
    
    <category term="分类3-1" scheme="https://southernfish.github.io/categories/%E5%88%86%E7%B1%BB3/%E5%88%86%E7%B1%BB3-1/"/>
    
    
    <category term="tag1" scheme="https://southernfish.github.io/tags/tag1/"/>
    
    <category term="tag2" scheme="https://southernfish.github.io/tags/tag2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://southernfish.github.io/2022/08/10/hello-world/"/>
    <id>https://southernfish.github.io/2022/08/10/hello-world/</id>
    <published>2022-08-10T01:15:36.000Z</published>
    <updated>2025-06-18T10:11:04.109Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="hexo" scheme="https://southernfish.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://southernfish.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
